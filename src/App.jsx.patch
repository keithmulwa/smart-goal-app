useEffect(() => {
  const fetchGoals = async () => {
    try {
      const response = await axios.get('https://smart-goal-app.onrender.com/goals');
      setGoals(response.data);
    } catch (error) {
      console.error('Failed to fetch goals:', error);
      alert('Failed to fetch goals from server.');
    }
  };
  fetchGoals();
}, []);

const addGoal = async (goal) => {
  try {
    const response = await axios.post('https://smart-goal-app.onrender.com/goals', goal);
    setGoals([...goals, response.data]);
  } catch (error) {
    console.error('Failed to add goal:', error);
    alert('Failed to add goal.');
  }
};

const updateGoal = async (id, updatedGoal) => {
  try {
    const response = await axios.put(`https://smart-goal-app.onrender.com/goals/${id}`, updatedGoal);
    setGoals(goals.map(goal => (goal.id === id ? response.data : goal)));
  } catch (error) {
    console.error('Failed to update goal:', error);
    alert('Failed to update goal.');
  }
};

const deleteGoal = async (id) => {
  try {
    await axios.delete(`https://smart-goal-app.onrender.com/goals/${id}`);
    setGoals(goals.filter(goal => goal.id !== id));
  } catch (error) {
    console.error('Failed to delete goal:', error);
    alert('Failed to delete goal.');
  }
};

const makeDeposit = async (id, amount) => {
  try {
    const goal = goals.find(goal => goal.id === id);
    const updatedGoal = { ...goal, savedAmount: goal.savedAmount + amount };
    const response = await axios.patch(`https://smart-goal-app.onrender.com/goals/${id}`, updatedGoal);
    setGoals(goals.map(g => (g.id === id ? response.data : g)));
  } catch (error) {
    console.error('Failed to make deposit:', error);
    alert('Failed to make deposit.');
  }
};
